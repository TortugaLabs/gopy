#!/bin/bash
loc=$(dirname "$(readlink -f "$0")")

if [ ! -f "$loc.env" ] ; then
  echo "Missing $loc.env file"
  exit 1
fi
. "$loc.env"

if [ -z "$target" ] ; then
  echo "No target defined"
  exit
fi

# Check submodules...
if [ -d "$loc/.git" ] ; then
  if [ -f "$loc/.gitmodules" ] ; then
    # Check if submodules are all there...
    grep -E '^\s*path\s*=\s*' "$loc"/.gitmodules | sed 's/^\s*path\s*=\s*//' | while read subpath
    do
      if [ ! -e "$loc/$subpath/.git" ] ; then
	(cd "$loc" && git submodule update --init --recursive)
	break
      fi
    done
  fi
fi

binary_data() {
  local src="$1" dst="$2" marker="/_EOF_9384_EOF_/"
  echo "$2() {"
  echo "("
  echo "cat <<'$marker'"
  gzip -v < "$src" | base64
  echo "$marker"
  echo ") | base64 -d | gzip -d"
  echo "}"
}

bcopy() {
  local mode=
  while [ $# -gt 0 ]
  do
    case "$1" in
    --mode=*)
      mode=${1#--mode=}
      ;;
    *)
      break
      ;;
    esac
    shift
  done
  target="$1"
  if [ -f "$target" ] ; then
    dd of="$target.$$"
    newsum=$(md5sum < "$target.$$")
    oldsum=$(md5sum < "$target")
    if [ x"$newsum" = x"$oldsum" ] ; then
      rm -f "$target.$$"
    else
      echo "Updating $target"
      rm -f "$target"
      mv "$target.$$" "$target"
    fi
  else
    dd of="$target"
    echo "Creating $target"
  fi
  [ -n "$mode" ] && chmod "$mode" "$target"
}


xid=0
send_file() {
  local f="$xid" src="$1" ; shift
  xid=$(expr $xid + 1)
  binary_data "$src" data_${f}
  echo "data_${f} | bcopy $*"
}

payload() {
  ( cd /etc/init.d && ln -sf ../gopy.openrc gopy )
}

(  
  declare -f payload
  declare -f bcopy
  appdir="/var/www/gopy"
  echo "mkdir -p $appdir/static"
  send_file bottle.py $appdir/bottle.py
  send_file favicon.ico $appdir/favicon.ico
  send_file go.py $appdir/go.py
  send_file openrc.service --mode=755 /etc/gopy.openrc
  send_file static/apple-icon-144x144.png $appdir/static/apple-icon-144x144.png
  send_file welcome.html $appdir/welcome.html
  if [ -f settings.txt ] ; then
    send_file settings.txt $appdir/settings.txt
  else
    send_file settings-sample.txt $appdir/settings.txt
  fi
  if [ -f routes.txt ] ; then
    send_file routes.txt $appdir/routes.txt
  else
    send_file routes-sample.txt $appdir/routes.txt
  fi
  echo "payload"

)  | ssh "$target"



